{"name":"Codeigniter-gCharts","tagline":"A library that extends the flexibility and power of Google Charts into CodeIgniter using the magic of PHP5","body":"#Codeigniter-gCharts\r\n###Google Chart API for CodeIgniter\r\nThis is a library that extends the flexibility and power of Google Charts into CodeIgniter using the magic of PHP5  \r\nby [Kevin Hill](http://khilldesigns.site11.com)  \r\nIf you have any questions or comments, please email me or post issues here on github\r\n\r\n - - -\r\n\r\n##Installing\r\nCopy the \"libraries\" folder into your Codeigniter application folder.\r\n\r\n##Usage\r\nHere is an example of how to create a line chart with two lines of data\r\n\r\n###First the controller\r\n1. Copy the \"libraries\" folder into your Codeigniter application folder.\r\n2. Load the library in your controller you will use to define the chart.  \r\n```\r\n$this->load->library('gcharts');\r\n```\r\n3. Use the now defined gcharts library to pick which chart you are going to build, we will be creating a LineChart.\r\n4. Pass an array defining what you will be plotting in your graph. The first item will be the horizontal axis, the second item => the first line, the third item => second line, etc...  \r\n```\r\n$this->gcharts->LineChart(\r\n    array('Amount', 'Current', 'Projected')\r\n);\r\n```\r\n5. \r\n\r\n - - -\r\n\r\n###Example Controller, welcome.php with LineChart  \r\n```\r\n<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\r\n\r\nclass Welcome extends CI_Controller {\r\n\r\n    function __construct()\r\n    {\r\n        parent::__construct();\r\n        $this->load->library('gcharts');\r\n    }\r\n\r\n    public function chart()\r\n    {\r\n        try {\r\n            $this->gcharts->LineChart(array('Count', 'Actual', 'Projected'));\r\n\r\n            $this->gcharts->LineChart->title('Temperature Variance');\r\n            $this->gcharts->LineChart->curveType('function');\r\n            $this->gcharts->LineChart->width(800)->height(250)->pointSize(2)->lineWidth(2);\r\n\r\n            $chartArea = new chartArea();\r\n            $chartArea->left(25)->top(25)->width('75%');\r\n\r\n            $textStyle = new textStyle();\r\n            $textStyle->color('#FF0A04')->fontName('Lucida')->fontSize(18);\r\n\r\n            $gcharts->LineChart->addOption($chartArea)->titleTextStyle($textStyle);\r\n        } catch(Exception $e) {\r\n            data['error'] = $e->getMessage();\r\n        }\r\n\r\n        for($a = 1; $a < 10; $a++)\r\n        {\r\n            $line1 = rand(-20,20);\r\n            $line2 = rand(-20,20);\r\n            $gcharts->LineChart->addData(array($a, $line1, $line2));\r\n        }\r\n\r\n        $this->load->view('example.php', $data);\r\n    }\r\n    \r\n}\r\n```\r\n\r\n - - -\r\n\r\n###Now the view\r\n1. The Google API needs to be loaded into the header first and foremost. Put this\r\n```\r\n<?php echo Gcharts::$googleAPI; ?>\r\n```\r\ninto the head of the view, The script tags are included.\r\n2. Then use the output method of the chart to pick where the chart will be loaded. Pass a string with the ID of an element to load the chart into, here we are using 'chart_div'.\r\n\r\n\r\n###Example view.php\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\" xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n    <head>\r\n        <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\r\n        <meta http-equiv=\"Content-Language\" content=\"en\" />\r\n        <title>Codeigniter-gCharts</title>\r\n        <?php echo Gcharts::$googleAPI; ?>\r\n        <?php echo $gcharts->LineChart->output('chart_div'); ?>\r\n    </head>\r\n\r\n    <body>\r\n        <div id=\"chart_div\">\r\n        </div>\r\n        <div>\r\n            <?php echo $error; ?>\r\n        </div>\r\n    </body>\r\n</html>\r\n```\r\n\r\n###Output  \r\n![Chart Output](http://i.imgur.com/Eojy0zu.png)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}