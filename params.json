{"name":"Codeigniter-gCharts","tagline":"A library that extends the flexibility and power of Google Charts into CodeIgniter using the magic of PHP5","body":"#Codeigniter-gCharts\r\n###Google Chart API for Codeigniter\r\n\r\nThis is a library that extends the flexibility and power of Google Charts into CodeIgniter using the magic of PHP5\r\nBy: [Kevin Hill](kevinkhill@gmail.com)\r\n\r\nIf you have any questions or comments... please email me, post issues here, or fork me and help out ;)\r\n\r\n - - -\r\n\r\n\r\n##Installing\r\n1. Clone the repo into a directory of your choice and copy all of the files into their corresponding folders into your Codeigniter project.\r\n    * EX: Codeigniter-gCharts/config/gcharts.php into <CI_ROOT>/application/config/gcharts.php\r\n2. That's it! You now have the power of Google Charts in your project.\r\n\r\n\r\n\r\n##Examples\r\nExample charts have been included, just navigate to ```http://<YOUR_CI_SITE>/index.php/gchart_examples```\r\n\r\n\r\n\r\n##Usage\r\nHere is an example of how to create a line chart with two lines of data\r\n\r\n###The Controller\r\n1. Load the library in the controller you will use to define the chart, or add it to your autoload config file.\r\n\r\n\t```\r\n\t//Load in the controller\r\n\t$this->load->library('gcharts');\r\n\r\n\t//Or in the autoload config file\r\n\t$autoload['libraries'] = array('gcharts');\r\n\t```\r\n\r\n2. Now we can use the gcharts library to create a DataTable. Pass a string to the DataTable function to assign a label for the table.\r\n3. Then add your columns, defining what the chart's data will consist of. In this example, the first column is the horizontal axis, then then next two columns are the two sets of data. The order of arguments are as follows: [data type, label, id]\r\n\r\n\t```\r\n\t$dataTable = $this->gcharts->DataTable('Stocks');\r\n\r\n\t$dataTable->addColumn('number', 'Count', 'count');\r\n\t$dataTable->addColumn('number', 'Projected', 'projected');\r\n\t$dataTable->addColumn('number', 'Official', 'official');\r\n\t```\r\n\r\n4. Next add some data, for this example, it is filled with randomness. The addRow() function argument order follows the order in which the columns were added.\r\nSo here, array[0] is for 'count', array[1] is for 'projected' and array[2] is for 'official'\r\n\r\n\t```\r\n\tfor($a = 1; $a < 25; $a++)\r\n\t{\r\n\t    $data[0] = $a; //Count\r\n\t    $data[1] = rand(800,1000); //Line 1's data\r\n\t    $data[2] = rand(800,1000); //Line 2's data\r\n\r\n\t    $dataTable->addRow($data);\r\n\t}\r\n\t```\r\n\r\n5. Now lets configure some options for the chart. There are many ways to customize the chart, but we'll keep it simple. (Refer to the documentation for the list of configuration options.)\r\n\r\n\t```\r\n\t$config = array(\r\n\t    'title' => 'Stocks'\r\n\t);\r\n\t```\r\n\r\n6. Finally, pass the configuration to the chart of choice, LineChart in this example, making sure that the Chart label matches the DataTable label.\r\n\r\n\t```\r\n\t//Since we named the dataTable \"Stocks\", call the LineChart function as \"Stocks\" to use that dataTable\r\n\t$this->gcharts->LineChart('Stocks')->setConfig($config);\r\n\t```\r\n\r\n\r\n\r\n\r\n###The View\r\n1. Within your view, use these functions to get your chart onto the page.\r\n\t* If you want everything generated automatically, use outputInto() with the div() function.\r\n\t* Pass a string as a label to the outputInto() function which will be used when creating the div.\r\n\t* Then use the div() function to create a div that autoomatically has the corresponding label as it's id.\r\n\t* NOTE: You can also pass [width, height] to the div() function and it will be applied to the div.\r\n2. If you already have a ```<div id=\"SOME-ID\">``` on the page, then ommit the div() function and just pass the div's ID into the outputInto() function.\r\n\r\n\t```\r\n\t//Example #1, have the library create the div\r\n\techo $this->gcharts->LineChart('Stocks')->outputInto('stock_div');\r\n\techo $this->gcharts->div(600, 300);\r\n\r\n\t//Example #2, output into a div you already created\r\n\techo $this->gcharts->LineChart('Stocks')->outputInto('SOME-ID');\r\n\t```\r\n3. You can also setup a way of viewing errors in the creation of the chart by using this method.\r\n\r\n\t```\r\n\tif($this->gcharts->hasErrors())\r\n\t{\r\n\t    echo $this->gcharts->getErrors();\r\n\t}\r\n\t```\r\n\r\n\r\n##Putting it all together\r\n```\r\n//Controller\r\n\r\n$this->load->library('gcharts');\r\n\r\n$dataTable = $this->gcharts->DataTable('Stocks');\r\n\r\n$dataTable->addColumn('number', 'Count', 'count');\r\n$dataTable->addColumn('number', 'Projected', 'projected');\r\n$dataTable->addColumn('number', 'Official', 'official');\r\n\r\nfor($a = 1; $a < 25; $a++)\r\n{\r\n    $data[0] = $a //Count\r\n    $data[1] = rand(800,1000); //Line 1's data\r\n    $data[2] = rand(800,1000); //Line 2's data\r\n\r\n    $dataTable->addRow($data);\r\n}\r\n\r\n$config = array(\r\n    'title' => 'Stocks'\r\n);\r\n\r\n$this->gcharts->LineChart('Stocks')->setConfig($config);\r\n```\r\n\r\n```\r\n//View\r\n\r\necho $this->gcharts->LineChart('Stocks')->outputInto('stock_div');\r\necho $this->gcharts->div(600, 300);\r\n\r\nif($this->gcharts->hasErrors())\r\n{\r\n    echo $this->gcharts->getErrors();\r\n}\r\n```\r\n\r\n###Output\r\n![Chart Output](http://i.imgur.com/XVM8q7T.png)\r\n\r\n\r\n##Todo\r\n * Add event callbacks\r\n * Support more charts\r\n * Make available via composer and/or sparks and/or non-codeigniter projects\r\n\r\n##License\r\n\r\n                              MIT License\r\n             Copyright (c) 2013, Kevin Hill of KHill Designs\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}